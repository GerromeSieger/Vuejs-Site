version: 2.1

workflows:
  version: 2
  build-test-deploy:
    jobs:
      # - test:
      #     filters:
      #       branches:
      #         only: main
      - build:
          # requires:
          #   - test
          filters:
            branches:
              only: main            
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main

jobs:
  # test:
  #   docker:
  #     - image: sonarsource/sonar-scanner-cli:latest
  #   steps:
  #     - checkout
  #     - run:
  #         name: Run SonarQube analysis
  #         command: |
  #           sonar-scanner \
  #             -Dsonar.projectKey=${PROJECT_KEY} \
  #             -Dsonar.sources=. \
  #             -Dsonar.host.url=${SONAR_HOST_URL} \
  #             -Dsonar.login=${SONAR_TOKEN}

  build:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Generate Docker Tag
          command: |
            echo "export DOCKER_TAG=${CIRCLE_SHA1:0:7}" >> $BASH_ENV
            source $BASH_ENV
            echo $DOCKER_TAG
      - run:
          name: Build and push Docker image
          command: |
            echo $DOCKERHUB_PASSWORD | docker login -u $DOCKERHUB_USERNAME --password-stdin
            docker build -t $DOCKER_IMAGE:$DOCKER_TAG .
            docker push $DOCKER_IMAGE:$DOCKER_TAG


  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - run:
          name: Create and populate kubeconfig
          command: |
            mkdir -p $HOME/.kube
            echo -e "$KUBECONFIG_CONTENT" > $HOME/.kube/config
            chmod 600 $HOME/.kube/config
      - run:
          name: Install kubectl
          command: |
            curl -LO "https://dl.k8s.io/release/v1.28.0/bin/linux/amd64/kubectl"
            chmod +x ./kubectl
            sudo mv ./kubectl /usr/local/bin/kubectl
      - run:
          name: Verify kubectl configuration
          command: |
            git clone ${KUBE_MANIFEST_REPO}
            kubectl get nodes